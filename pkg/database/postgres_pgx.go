package database

import (
	"context"
	"fmt"
	"os"

	"github.com/jackc/pgx/v5"
)

type postgresPgxDataSource struct {
	db *pgx.Conn
}

func NewPostgresPgxDataSource() PgxDataSource {
	ds := postgresPgxDataSource{}
	ds.init()
	return &ds
}

func (ds *postgresPgxDataSource) init() {
	connString := fmt.Sprintf("host=%v user=%v password=%v dbname=%v port=%v",
		os.Getenv("DB_HOST"),
		os.Getenv("DB_USER"),
		os.Getenv("DB_PASSWORD"),
		os.Getenv("DB_DATABASE"),
		os.Getenv("DB_PORT"))

	db, err := pgx.Connect(context.Background(), connString)

	if err != nil {
		panic("DB connection failure")
	}

	println("DB connected")
	ds.db = db
}

func (ds *postgresPgxDataSource) Get() *pgx.Conn {
	return ds.db
}

func (ds *postgresPgxDataSource) Close() error {
	return ds.db.Close(context.Background())
}
