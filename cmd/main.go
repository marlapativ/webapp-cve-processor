package main

import (
	"context"
	"fmt"
	"os"
	"os/signal"
	"syscall"

	"github.com/csye7125-su24-team06/webapp-cve-processor/internal/processor"
	"github.com/csye7125-su24-team06/webapp-cve-processor/internal/repository"
	"github.com/csye7125-su24-team06/webapp-cve-processor/internal/util"
	"github.com/csye7125-su24-team06/webapp-cve-processor/pkg/database"

	"github.com/joho/godotenv"
)

func main() {
	// Load Environment Variables
	godotenv.Load()
	
	// Database Setup
	gormDataSource := database.NewPostgresGormDataSource()
	gormDataSource.Get().Exec("TRUNCATE TABLE cve.cves;")
	gormRepo := repository.NewGormRepository(gormDataSource)
	handleSignal(gormDataSource)

	// Database Setup v2
	pgxDataSource := database.NewPostgresPgxDataSource()
	pgxDataSource.Get().Exec(context.Background(), "TRUNCATE TABLE cve.cves;")
	pgxRepo := repository.NewPgxRepository(pgxDataSource)
	handleSignal(pgxDataSource)
	
	// Processor Setup
	gormProcessor := processor.NewCveProcessor(gormRepo)
	pgxProcessor := processor.NewCveProcessor(pgxRepo)

	// Download
	fmt.Println("Downloading Zip...")
	downloadDir := util.GetEnvOrDefault("DOWNLOAD_DIR", "./cve-list")
	url := util.GetEnvOrDefault("CVE_LIST_URL", "https://github.com/CVEProject/cvelistV5/archive/refs/heads/main.zip")
	zipFilePath := util.DownloadFromUrl(url, downloadDir)
	fmt.Printf("Downloaded file path : %v\n", zipFilePath)

	// Process 
	fmt.Println("Processing using gorm processor...")
	gormProcessor.Process(zipFilePath)

	fmt.Println("Processing using pgx processor...")
	pgxProcessor.Process(zipFilePath)
	
	// Wait for signal
	fmt.Println("Done...")
	wait := make(chan int, 1)
	<-wait
}


func handleSignal(ds database.CloseableDataSource) {
	sigc := make(chan os.Signal, 1)
	signal.Notify(sigc,
		syscall.SIGHUP,
		syscall.SIGINT,
		syscall.SIGTERM,
		syscall.SIGQUIT)

	go func() {
		<-sigc

		fmt.Println("Disconnecting Database...")

		if err := ds.Close(); err != nil {
			fmt.Println("DB Connection was not closed")
			os.Exit(0)
		}

		fmt.Println("Cleanup Completed!")
		os.Exit(0)
	}()
}
